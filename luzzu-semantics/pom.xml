<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.unibonn.iai.eis</groupId>
		<artifactId>luzzu</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>luzzu-semantics</artifactId>
	<name>Luzzu Semantics Module</name>
	<description>Semantics is the underlying semantics description module for Luzzu.</description>


	<!-- This is required to generate source files from semantic vocabularies -->
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<property name="runtime_classpath" refid="maven.runtime.classpath" />
								<echo message="Compiling Vocabularies into Classes" />
								<java classname="jena.schemagen" classpath="${runtime_classpath}">
									<arg
										line="-i src/main/resources/vocabularies/daq/daq.trig -e N3 --inference --package de.unibonn.iai.eis.luzzu.semantics.vocabularies -o src/main/java -n DAQ" />
								</java>
								<java classname="jena.schemagen" classpath="${runtime_classpath}">
									<arg
										line="--inference -i src/main/resources/vocabularies/void/void.ttl -e TTL  --package de.unibonn.iai.eis.luzzu.semantics.vocabularies -o src/main/java -n VOID" />
								</java>
								<java classname="jena.schemagen" classpath="${runtime_classpath}">
									<arg
										line="-i src/main/resources/vocabularies/qr/qr.trig -e N3 --inference --package de.unibonn.iai.eis.luzzu.semantics.vocabularies -o src/main/java -n QR" />
								</java>
								<java classname="jena.schemagen" classpath="${runtime_classpath}">
									<arg
										line="--inference -i src/main/resources/vocabularies/cube/cube.ttl -e TTL  --package de.unibonn.iai.eis.luzzu.semantics.vocabularies -o src/main/java -n CUBE" />
								</java>
								<java classname="jena.schemagen" classpath="${runtime_classpath}">
									<arg
										line="-i src/main/resources/vocabularies/cube/sdmx-attribute.ttl -e N3 --inference --package de.unibonn.iai.eis.luzzu.semantics.vocabularies -o src/main/java -n SDMXATTRIBUTE	" />
								</java>
								<java classname="jena.schemagen" classpath="${runtime_classpath}">
									<arg
										line="-i src/main/resources/vocabularies/lmi/lmi.trig -e N3 --inference --package de.unibonn.iai.eis.luzzu.semantics.vocabularies -o src/main/java -n LMI" />
								</java>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.9</version>
					<executions>
						<execution>
							<id>add-resource</id>
							<phase>generate-resources</phase>
							<goals>
								<goal>add-resource</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>externals</directory>
										<targetPath>externals</targetPath>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				    			<!-- temporary deployment -->
				 <plugin>
			        <artifactId>maven-deploy-plugin</artifactId>
			        <version>2.8.1</version>
			        <configuration>
			            <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
			        </configuration>
			    </plugin>
			   <!--  end of deployment plugin -->
			   
			</plugins>
		</pluginManagement>
	</build>
</project>