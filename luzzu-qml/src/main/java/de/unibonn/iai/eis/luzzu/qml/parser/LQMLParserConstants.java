/* Generated By:JavaCC: Do not edit this line. LQMLParserConstants.java */
package de.unibonn.iai.eis.luzzu.qml.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LQMLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DEF = 6;
  /** RegularExpression Id. */
  int LABEL = 7;
  /** RegularExpression Id. */
  int DESC = 8;
  /** RegularExpression Id. */
  int MATCH = 9;
  /** RegularExpression Id. */
  int ACTION = 10;
  /** RegularExpression Id. */
  int METRICURI = 11;
  /** RegularExpression Id. */
  int AUTHOR = 12;
  /** RegularExpression Id. */
  int PACKAGE = 13;
  /** RegularExpression Id. */
  int TYPEOF = 14;
  /** RegularExpression Id. */
  int COUNT = 15;
  /** RegularExpression Id. */
  int MAP = 16;
  /** RegularExpression Id. */
  int CHAR = 17;
  /** RegularExpression Id. */
  int NUMBER = 18;
  /** RegularExpression Id. */
  int STRICT_STR = 19;
  /** RegularExpression Id. */
  int STR = 20;
  /** RegularExpression Id. */
  int QUOTED_STR = 21;
  /** RegularExpression Id. */
  int LBRACE = 22;
  /** RegularExpression Id. */
  int RBRACE = 23;
  /** RegularExpression Id. */
  int LPAREN = 24;
  /** RegularExpression Id. */
  int RPAREN = 25;
  /** RegularExpression Id. */
  int COLON = 26;
  /** RegularExpression Id. */
  int SEMI_COLON = 27;
  /** RegularExpression Id. */
  int PERIOD = 28;
  /** RegularExpression Id. */
  int QUOTES = 29;
  /** RegularExpression Id. */
  int BOOLEAN_OPERATOR = 30;
  /** RegularExpression Id. */
  int EQ = 31;
  /** RegularExpression Id. */
  int NEQ = 32;
  /** RegularExpression Id. */
  int LT = 33;
  /** RegularExpression Id. */
  int GT = 34;
  /** RegularExpression Id. */
  int LTE = 35;
  /** RegularExpression Id. */
  int GTE = 36;
  /** RegularExpression Id. */
  int LOGICAL_OPERATOR = 37;
  /** RegularExpression Id. */
  int HEADER_INDICATOR = 38;
  /** RegularExpression Id. */
  int SUBJECT_VAR = 39;
  /** RegularExpression Id. */
  int PREDICATE_VAR = 40;
  /** RegularExpression Id. */
  int OBJECT_VAR = 41;
  /** RegularExpression Id. */
  int IRIref = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"//\"",
    "\"def\"",
    "\"label\"",
    "\"description\"",
    "\"match\"",
    "\"action\"",
    "\"metric\"",
    "\"author\"",
    "\"package\"",
    "\"typeof\"",
    "\"count\"",
    "\"map\"",
    "<CHAR>",
    "<NUMBER>",
    "<STRICT_STR>",
    "<STR>",
    "<QUOTED_STR>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\":\"",
    "\";\"",
    "\".\"",
    "\"\\\"\"",
    "<BOOLEAN_OPERATOR>",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "<LOGICAL_OPERATOR>",
    "\"%%\"",
    "\"?s\"",
    "\"?p\"",
    "\"?o\"",
    "<IRIref>",
  };

}
